{"componentChunkName":"component---src-templates-blog-post-index-js","path":"/database-post-01/","result":{"data":{"site":{"siteMetadata":{"title":"Happy Hwan","author":"Hwan Choi"}},"markdownRemark":{"id":"a267202b-32d3-540c-a169-53109a493ad2","html":"<h2>시작하기에 앞서</h2>\n<p>멀티캠퍼스에서 데이터베이스 관련 수업이 시작되었다. 처음 배우는 데이터베이스지만 과거에 부스트코스 안드로이드 프로그래밍을 하면서 다뤄봤던 적이 있던 주제였다. 그 때 당시에는 따라 쓰기에 급급하고 매번 구글링으로만 해결하던 문제들을 이해하도록 노력해보자!</p>\n<h2>환경설정</h2>\n<ul>\n<li><a href=\"https://www.oracle.com/database/technologies/xe-downloads.html\">Database 18c Express Edition</a> 이전버전 다운로드.</li>\n<li>\n<p><a href=\"https://www.oracle.com/tools/downloads/sqldev-downloads.html\">SQL Developer</a> 써도 되지만 이클리스에서 제공함. </p>\n<p>자바 환경이 구축된 공간에서는Windows 64-bit with JDK 8 included 으로 돌리는게 편함 .</p>\n</li>\n</ul>\n<h2>생성과 실행.</h2>\n<ul>\n<li>관리자 계정 접속.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">C:<span class=\"token punctuation\">\\</span>Users<span class=\"token punctuation\">\\</span>student<span class=\"token operator\">></span>sqlplus system/비밀번호\n\n\nSQL*Plus: Release <span class=\"token number\">11.2</span>.0.2.0 Production on 월 <span class=\"token number\">12</span>월 <span class=\"token number\">23</span> <span class=\"token number\">10</span>:10:49 <span class=\"token number\">2019</span>\n\nCopyright <span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> <span class=\"token number\">1982</span>, <span class=\"token number\">2010</span>, Oracle.  All rights reserved.\n\n\nConnected to:\nOracle Database 11g Express Edition Release <span class=\"token number\">11.2</span>.0.2.0 - Production\n\nSQL<span class=\"token operator\">></span></code></pre>\n      </div>\n<blockquote>\n<p> 잘된예시</p>\n</blockquote>\n<ul>\n<li>hr/hr에 접근하려 하지만 락이 걸려있음. 접근하기 위해서는 관리자에서 락을 풀어줘야한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\">\n      <pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SQL</span><span class=\"token operator\">></span> conn hr<span class=\"token operator\">/</span>hr\nERROR:\nORA<span class=\"token operator\">-</span><span class=\"token number\">28000</span>: the account <span class=\"token operator\">is</span> locked\n\n<span class=\"token keyword\">alter</span> <span class=\"token keyword\">user</span> hr identified <span class=\"token keyword\">by</span> hr account <span class=\"token keyword\">unlock</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">--락을 풀어주는 부분</span></code></pre>\n      </div>\n<ul>\n<li>TABLESPACE 생성</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\">\n      <pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">create</span> <span class=\"token keyword\">TABLESPACE</span> <span class=\"token operator\">&lt;</span>NAME<span class=\"token operator\">></span>\ndatafile <span class=\"token string\">'C:\\oraclexe\\app\\oracle\\oradata\\XE\\&lt;NAME>.dbf'</span>\nsize <span class=\"token number\">10</span>M\nautoextend <span class=\"token keyword\">on</span> <span class=\"token keyword\">next</span> <span class=\"token number\">1</span>M maxsize UNLIMITED<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">--TABLESPACE를 만드는 부분이다.</span></code></pre>\n      </div>\n<blockquote>\n<p>C:\\oraclexe\\app\\oracle\\oradata\\XE :실질적인 데이터가 들어있는 디렉토리.</p>\n<p>테이블 스페이스 : 어떠한 계정에 들어갈 데이터들의 공간. </p>\n<p>테이블을 만들면 실질적인 데이터 들은 oradata로 들어간다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"sql\">\n      <pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">create</span> <span class=\"token keyword\">user</span> <span class=\"token operator\">&lt;</span>NAME<span class=\"token operator\">></span> identified <span class=\"token keyword\">by</span> <span class=\"token operator\">&lt;</span>PASSWORD<span class=\"token operator\">></span> \n<span class=\"token comment\">--계정이름고 비밀번호 정하기.</span>\n<span class=\"token keyword\">default</span> <span class=\"token keyword\">TABLESPACE</span> <span class=\"token operator\">&lt;</span>FILENAME<span class=\"token operator\">></span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">--기본값일 파일 이름 안해줄시 system에 연결이 되어버린다..</span></code></pre>\n      </div>\n<p>오라클에서 계정을 만들고 default 값을 설정하지않으면 시스템영역을 사용해버림.  주의하자.</p>\n<blockquote>\n<p>오라클에서 계정은 스키마라고 부릅니다.  SQL에서는 데이터베이스를 말하는 부분.</p>\n</blockquote>\n<blockquote>\n<p>정규화과정 = 테이블을 쪼개는 것. 중복되는 데이터들을 뽑아내서 테이블을 만드는것.</p>\n</blockquote>\n<h2>권한과 삭제</h2>\n<div class=\"gatsby-highlight\" data-language=\"sql\">\n      <pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">grant</span> <span class=\"token keyword\">connect</span><span class=\"token punctuation\">,</span>resource<span class=\"token punctuation\">,</span>dba <span class=\"token keyword\">to</span> test01<span class=\"token punctuation\">;</span> \n<span class=\"token comment\">--권한부여 권한없이 접근할경우 접근되지않음.</span>\n\n<span class=\"token keyword\">revoke</span> dba <span class=\"token keyword\">from</span> test01<span class=\"token punctuation\">;</span> \n<span class=\"token comment\">--dba 권한만 뺏음. 커넥트 권한은 있음.</span>\n<span class=\"token keyword\">revoke</span> <span class=\"token keyword\">connect</span> <span class=\"token keyword\">from</span> test01<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">--connect 권한마저 뺏어버림</span>\n\n<span class=\"token keyword\">drop</span> <span class=\"token keyword\">user</span> test01 <span class=\"token keyword\">cascade</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">--test01 삭제 뒤의 cascade 는 강제성을줌</span></code></pre>\n      </div>\n<h2>SELECT와 관련된 명령문</h2>\n<div class=\"gatsby-highlight\" data-language=\"sql\">\n      <pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">desc</span> emp<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">--emp의 구조를 보여주세요.</span>\n\n<span class=\"token keyword\">select</span> <span class=\"token keyword\">distinct</span> job\n<span class=\"token keyword\">from</span> emp<span class=\"token punctuation\">;</span> \n<span class=\"token comment\">--distinct 중복제거.</span>\n\n\n\n<span class=\"token keyword\">select</span> sal<span class=\"token punctuation\">,</span> sal<span class=\"token operator\">*</span><span class=\"token number\">12</span>\n<span class=\"token keyword\">from</span> emp<span class=\"token punctuation\">;</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> 연산식도 사용가능<span class=\"token punctuation\">.</span>\n\n<span class=\"token keyword\">select</span> sal<span class=\"token punctuation\">,</span> sal<span class=\"token operator\">*</span><span class=\"token number\">12</span> <span class=\"token keyword\">as</span> <span class=\"token string\">\"연봉\"</span>\n<span class=\"token keyword\">from</span> emp<span class=\"token punctuation\">;</span> \n<span class=\"token comment\">--연산식의 이름을 설정도 가능. 유일하게 `\"`을 사용. 나머지는 다`'`으로 사용한다.</span>\n\n<span class=\"token keyword\">select</span> ename<span class=\"token punctuation\">,</span> job<span class=\"token punctuation\">,</span> sal<span class=\"token punctuation\">,</span> comm<span class=\"token punctuation\">,</span>  sal<span class=\"token operator\">+</span>comm <span class=\"token keyword\">as</span> <span class=\"token string\">\"실급여\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>nvl<span class=\"token punctuation\">(</span>comm<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> emp<span class=\"token punctuation\">;</span> \n<span class=\"token comment\">--nvl = null 이라면 -1 이라는 값으로 바꿔줘. oracle 함수임.</span>\n\n<span class=\"token keyword\">select</span> empno<span class=\"token punctuation\">,</span> ename<span class=\"token punctuation\">,</span> nvl<span class=\"token punctuation\">(</span>to_char<span class=\"token punctuation\">(</span>mgr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">`</span><span class=\"token string\">'&lt;&lt;CEO>>'</span><span class=\"token punctuation\">`</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token string\">\"매니저 코드\"</span>\n<span class=\"token keyword\">from</span> emp<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">--nvl 을 사용할때는 컬럼의 타입을 잘 확인해야함.  desc로 잘 확인하여 맞춰주자.</span>\n\n<span class=\"token keyword\">select</span> ename<span class=\"token punctuation\">,</span> job<span class=\"token punctuation\">,</span> ename<span class=\"token operator\">||</span><span class=\"token string\">'  '</span><span class=\"token operator\">||</span>job\n<span class=\"token keyword\">from</span> emp<span class=\"token punctuation\">;</span>  \n<span class=\"token comment\">--|| 문자열 연결.</span>\n\n<span class=\"token keyword\">select</span> <span class=\"token number\">20</span>\\<span class=\"token operator\">*</span><span class=\"token number\">20</span>\\<span class=\"token operator\">*</span><span class=\"token number\">4</span>\n<span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span> \n<span class=\"token comment\">--`dual`가상의 테이블로 값을 확인.</span>\n\n<span class=\"token keyword\">select</span> sysdate\n<span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span> \n<span class=\"token comment\">--날짜정보.</span>\n\n<span class=\"token keyword\">select</span> <span class=\"token keyword\">user</span>\n<span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span> \n<span class=\"token comment\">--로그인한 유저의 정보.</span>\n\n<span class=\"token comment\">--nvl 로 null 형식의 값을 초기화시켜준다.</span>\n<span class=\"token keyword\">select</span> empno<span class=\"token punctuation\">,</span> ename<span class=\"token punctuation\">,</span> nvl<span class=\"token punctuation\">(</span>to_char<span class=\"token punctuation\">(</span>mgr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'&lt;&lt;CEO>>'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token string\">\"매니저 코드\"</span>\n<span class=\"token keyword\">from</span> emp<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">--문자열 삽입</span>\n<span class=\"token keyword\">select</span> ename<span class=\"token punctuation\">,</span> job<span class=\"token punctuation\">,</span> ename<span class=\"token operator\">||</span><span class=\"token string\">'  '</span><span class=\"token operator\">||</span>job\n<span class=\"token keyword\">from</span> emp<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">--간단한 값 표시.</span>\n<span class=\"token keyword\">select</span> <span class=\"token number\">20</span><span class=\"token operator\">*</span><span class=\"token number\">20</span><span class=\"token operator\">*</span><span class=\"token number\">4</span>\n<span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">--row 제한을 걸때 where 절</span>\n<span class=\"token keyword\">select</span> ename<span class=\"token punctuation\">,</span> job<span class=\"token punctuation\">,</span> deptno\n<span class=\"token keyword\">from</span> emp\n<span class=\"token keyword\">where</span> job <span class=\"token operator\">=</span> <span class=\"token string\">'MANAGER'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">select</span> ename<span class=\"token punctuation\">,</span> job<span class=\"token punctuation\">,</span> deptno\n<span class=\"token keyword\">from</span> emp\n<span class=\"token keyword\">where</span> upper<span class=\"token punctuation\">(</span>job<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> upper<span class=\"token punctuation\">(</span><span class=\"token string\">'manager'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">select</span> ename<span class=\"token punctuation\">,</span> hiredate\n<span class=\"token keyword\">from</span> emp\n<span class=\"token keyword\">where</span> hiredate <span class=\"token operator\">>=</span> <span class=\"token string\">'82/01/01'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- &lt;>은 != 의 의미이다.</span>\n<span class=\"token keyword\">select</span> ename<span class=\"token punctuation\">,</span> hiredate\n<span class=\"token keyword\">from</span> emp\n<span class=\"token keyword\">where</span> hiredate <span class=\"token operator\">&lt;></span> <span class=\"token string\">'82/01/23'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">--between and = between 은 =이 포함된다. 작은값이 꼭 앞에 오기.</span>\n<span class=\"token keyword\">select</span> ename<span class=\"token punctuation\">,</span> sal \n<span class=\"token keyword\">from</span> emp\n<span class=\"token keyword\">where</span> sal <span class=\"token operator\">>=</span><span class=\"token number\">2450</span> <span class=\"token operator\">AND</span> sal <span class=\"token operator\">&lt;</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">select</span> ename<span class=\"token punctuation\">,</span> sal \n<span class=\"token keyword\">from</span> emp\n<span class=\"token keyword\">where</span> sal <span class=\"token operator\">BETWEEN</span> <span class=\"token number\">2450</span> <span class=\"token operator\">AND</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">--in 연산자</span>\n<span class=\"token keyword\">select</span> ename<span class=\"token punctuation\">,</span> job<span class=\"token punctuation\">,</span> deptno\n<span class=\"token keyword\">from</span> emp\n<span class=\"token keyword\">where</span> deptno <span class=\"token operator\">=</span> <span class=\"token number\">10</span> <span class=\"token operator\">or</span> deptno <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">select</span> ename<span class=\"token punctuation\">,</span> job<span class=\"token punctuation\">,</span> deptno\n<span class=\"token keyword\">from</span> emp\n<span class=\"token keyword\">where</span> deptno <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> dept\n<span class=\"token keyword\">where</span> <span class=\"token punctuation\">(</span>deptno<span class=\"token punctuation\">,</span>loc<span class=\"token punctuation\">)</span> <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'DALLAS'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'CHICAGO'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- like 연산자</span>\n<span class=\"token comment\">--A로 시작</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> emp\n<span class=\"token keyword\">where</span> ename <span class=\"token operator\">like</span> <span class=\"token string\">'A%'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">--A로 끝나냐</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> emp\n<span class=\"token keyword\">where</span> ename <span class=\"token operator\">like</span> <span class=\"token string\">'%A'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">--A가 포함</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> emp\n<span class=\"token keyword\">where</span> ename <span class=\"token operator\">like</span> <span class=\"token string\">'%A%'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">--A가 포함되긴 하는데 뒤에서 세번째</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> emp\n<span class=\"token keyword\">where</span> ename <span class=\"token operator\">like</span> <span class=\"token string\">'%A__'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">--81년도에 입사한 사원 목록.</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> emp\n<span class=\"token keyword\">where</span> hiredate <span class=\"token operator\">like</span> <span class=\"token string\">'%81%'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">SQL</span><span class=\"token operator\">></span> <span class=\"token keyword\">purge</span> recyclebin<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">--쓰레기값을 날려보자</span></code></pre>\n      </div>\n<h3>SQL 명령어 분류</h3>\n<ul>\n<li>Query : SELECT</li>\n<li>DML : INSERT, UPDATE, DELETE (롤백이 여지가 있음.)</li>\n<li>Transaction Control : COMMIT, ROLLBACK</li>\n<li>DDL : CREATE, DROP, TRUNCATE, ALTER (롤백의 여지가 없다.)</li>\n<li>DCL : GRANT, REVOKE</li>\n</ul>\n<blockquote>\n<p>처음 시작시 데이터베이스의 생성(oracle에서는 스키마 생성)과  흐름을 이해하는게 부족한 것 같다. </p>\n<p>특히 select 문의 like 부분은 한번씩 와서 확인할 수 있도록 해보자. 나중에 도움이 될것같다.</p>\n</blockquote>","excerpt":"…","frontmatter":{"title":"데이터베이스 정리 -01","date":"2019-12-23","tags":["sql","database","TIL"],"keywords":["database","sql"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/database-post-01/","previous":{"fields":{"slug":"/python-post-02/"},"frontmatter":{"title":"파이썬 정리 -02","tags":["python","TIL"],"published":true}},"next":null}}}