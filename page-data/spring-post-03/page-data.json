{"componentChunkName":"component---src-templates-blog-post-index-js","path":"/spring-post-03/","result":{"data":{"site":{"siteMetadata":{"title":"Happy Hwan","author":"Hwan Choi"}},"markdownRemark":{"id":"b9b74f99-25c4-579b-8342-74f9dcf12adf","html":"<h2>시작하기에 앞서</h2>\n<p>4일차 스프링 정리</p>\n<h2>Spring Post 사용시 한글 깨짐 해결</h2>\n<ul>\n<li>web.xml 에 이런 코드를 작성한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"xml\">\n      <pre class=\"language-xml\"><code class=\"language-xml\">\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>filter</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>filter-name</span><span class=\"token punctuation\">></span></span>EncodingFilter<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>filter-name</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>filter-class</span><span class=\"token punctuation\">></span></span>org.springframework.web.filter.CharacterEncodingFilter<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>filter-class</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>init-param</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>param-name</span><span class=\"token punctuation\">></span></span>encoding<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>param-name</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>param-value</span><span class=\"token punctuation\">></span></span>UTF-8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>param-value</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>init-param</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>filter</span><span class=\"token punctuation\">></span></span>\n\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>filter-mapping</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>filter-name</span><span class=\"token punctuation\">></span></span>EncodingFilter<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>filter-name</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>url-pattern</span><span class=\"token punctuation\">></span></span>/*<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>url-pattern</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>filter-mapping</span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n<blockquote>\n<p>왜 깨지는걸까?? 한번 생각해보자</p>\n</blockquote>\n<h2>컨트롤러 메소드 리턴타입</h2>\n<ul>\n<li><code class=\"language-text\">ModelAndView</code> : 모델 + 뷰 가 둘다 필요할때 (명시하면 그대로, 아니면 자동)</li>\n<li><code class=\"language-text\">String</code> : 뷰(수동) (return \"뷰이름\")</li>\n<li><code class=\"language-text\">void</code> : 뷰(url 자동)</li>\n<li><code class=\"language-text\">Map</code> : 모델 + 뷰(url 자동)</li>\n</ul>\n<blockquote>\n<p>어떤 경우에도 뷰가 없을 수는 없다. 이유를 생각해보자.</p>\n</blockquote>\n<h2>컨트롤러 메소드 매개변수</h2>\n<ul>\n<li><code class=\"language-text\">HttpServletRequest</code> : 무언가 전달받아 그것을 Servlet 페이지로 전달할때 사용</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\">\n      <pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"/login\"</span><span class=\"token punctuation\">,</span> method <span class=\"token operator\">=</span> <span class=\"token class-name\">RequestMethod</span><span class=\"token punctuation\">.</span>POST<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">ModelAndView</span> <span class=\"token function\">loginSuccess</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">String</span> id <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">String</span> pw <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pw\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">ModelAndView</span> mv <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ModelAndView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">.</span><span class=\"token function\">equalsIgnoreCase</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"spring\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> pw<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"spring\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        mv<span class=\"token punctuation\">.</span><span class=\"token function\">addObject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"loginresult\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        mv<span class=\"token punctuation\">.</span><span class=\"token function\">addObject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"loginresult\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    mv<span class=\"token punctuation\">.</span><span class=\"token function\">setViewName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"loginsuccess\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> mv<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<ul>\n<li><code class=\"language-text\">String, int, double, boolean</code> : form 에서 input 으로 전달되는 파라미터의 name이 같은 이름일 때 사용가능.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\">\n      <pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"/login\"</span><span class=\"token punctuation\">,</span> method <span class=\"token operator\">=</span> <span class=\"token class-name\">RequestMethod</span><span class=\"token punctuation\">.</span>POST<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">ModelAndView</span> <span class=\"token function\">loginSuccess</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> id<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> pw<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//form input name = \"id\" : 요청파라미터이름이 id인 것으로 전송한다.</span>\n    <span class=\"token comment\">//요청 파라미터이름과 컨트롤러 메소드 매개변수 이름이 동일하면 자동으로 저장된다.</span>\n    <span class=\"token comment\">//form 입력 name 값 = 매개변수이름 동일 = db 컬럼명과 동일 하게 만들어서 저장하면 매우 단순해지고 좋음.</span>\n    <span class=\"token class-name\">ModelAndView</span> mv <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ModelAndView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">.</span><span class=\"token function\">equalsIgnoreCase</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"spring\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> pw<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"spring\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        mv<span class=\"token punctuation\">.</span><span class=\"token function\">addObject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"loginresult\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        mv<span class=\"token punctuation\">.</span><span class=\"token function\">addObject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"loginresult\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    mv<span class=\"token punctuation\">.</span><span class=\"token function\">setViewName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"loginsuccess\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> mv<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"/login\"</span><span class=\"token punctuation\">,</span> method <span class=\"token operator\">=</span> <span class=\"token class-name\">RequestMethod</span><span class=\"token punctuation\">.</span>POST<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">ModelAndView</span> <span class=\"token function\">loginSuccess</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestParam</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">String</span> id2<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> pw<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// @RequestParam(\"id\")라고 써있는 부분 = > id2 에 자동 저장되게 해줌.</span>\n    위와 동일<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"/login\"</span><span class=\"token punctuation\">,</span> method <span class=\"token operator\">=</span> <span class=\"token class-name\">RequestMethod</span><span class=\"token punctuation\">.</span>POST<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">ModelAndView</span> <span class=\"token function\">loginSuccess</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestParam</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> required <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> defaultValue <span class=\"token operator\">=</span> <span class=\"token string\">\"spring\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">String</span> id2<span class=\"token punctuation\">,</span><span class=\"token class-name\">String</span> pw<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">)</span> \n<span class=\"token comment\">//jsp 에서 age에 입력하는 값이 반드시 int 로 변형가능한 값이면 자동으로 연결해 준다.</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<ul>\n<li><code class=\"language-text\">Object(객체)</code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\">\n      <pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"/login\"</span><span class=\"token punctuation\">,</span> method <span class=\"token operator\">=</span> <span class=\"token class-name\">RequestMethod</span><span class=\"token punctuation\">.</span>POST<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">ModelAndView</span> <span class=\"token function\">loginSuccess</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">LoginVO</span> vo<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token comment\">// 요청 파라미터이름과 컨트롤러 메소드 매개변수가 객체일 떄 객체 내부 멤버 변수가 이름이 동일하면 자동 저장.</span>\n\n    <span class=\"token comment\">//컨트롤러 메소드 매개변수 객체일 때 자동 모델로 사용가능하다</span>\n    <span class=\"token comment\">// 모델 이름은 클래스 이름으로 자동 결정이 된다: 앞글자 소문자로 만들고 사용 가능 </span>\n    <span class=\"token comment\">// 즉 mv.addObject(\"loginVO\",vo);  라고 써준것과 같은 효과가 적용됨.</span>\n    <span class=\"token comment\">//ex)loginVO</span>\n    <span class=\"token class-name\">ModelAndView</span> mv <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ModelAndView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>vo<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">equalsIgnoreCase</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"spring\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> vo<span class=\"token punctuation\">.</span><span class=\"token function\">getPw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"spring\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        mv<span class=\"token punctuation\">.</span><span class=\"token function\">addObject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"loginresult\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        mv<span class=\"token punctuation\">.</span><span class=\"token function\">addObject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"loginresult\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    mv<span class=\"token punctuation\">.</span><span class=\"token function\">setViewName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"loginsuccess\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> mv<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"/login\"</span><span class=\"token punctuation\">,</span> method <span class=\"token operator\">=</span> <span class=\"token class-name\">RequestMethod</span><span class=\"token punctuation\">.</span>POST<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">ModelAndView</span> <span class=\"token function\">loginSuccess</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@ModelAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"login\"</span><span class=\"token punctuation\">)</span><span class=\"token class-name\">LoginVO</span> vo<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//이번에는 vo 객체를 \"login\"이란 이름으로 보낸닷!</span>\n   <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<ul>\n<li>LoginVO.java</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\">\n      <pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">edu<span class=\"token punctuation\">.</span>multi<span class=\"token punctuation\">.</span>mvc</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LoginVO</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// ID PW AGE 요청 파라미터 입력 저장 변수들</span>\n\t<span class=\"token class-name\">String</span> id<span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">String</span> pw<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> age<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> id<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setId</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> id<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getPw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> pw<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setPw</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> pw<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pw <span class=\"token operator\">=</span> pw<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> age<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setAge</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> age<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<ul>\n<li>loginform.jsp</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\"language-html\"><code class=\"language-html\">&lt;%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\"\n\tpageEncoding=\"UTF-8\"%>\n<span class=\"token doctype\">&lt;!DOCTYPE html></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Insert title here<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>loginform.jsp 파일이 보입니다.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>http://localhost:8080/mvc/login<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>post<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\tID: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>id<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span> \n\t\tPW : <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>pw<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span> \n\t\t나이: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>age<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span> \n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>로그인<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n<h3>컨트롤러 매핑된 메소드 매개 변수</h3>\n<ul>\n<li><code class=\"language-text\">@RequestParam(value = &quot;&quot;, required = , defaultValue= &quot; &quot;)</code></li>\n<li><code class=\"language-text\">@ModelAttribute(&quot;&quot;) LoginVO vo 또는 객체</code></li>\n</ul>\n<p>$(\"jquery\")</p>\n<p>${jspl}</p>\n<p>초창기 ajax</p>\n<p>asynchronous javascript and xml(초창기는 xml을 써서 xml로 주고받았지만 후에 태그가 너무 많다보니 json으로 많이쓴당)</p>\n<p>json = javascript object notaion</p>\n<p>javascript 의 객체는 var obj = {name:\"홍길동\", age:21}</p>\n<p>AJAX</p>\n<ol>\n<li>요청1- 서버처리 -....</li>\n<li>클라이언트 동시 브라우저 화면 구성</li>\n<li></li>\n</ol>\n<p>현재화면의 전체는 그대로 부분만 바꿔보자!</p>\n<ul>\n<li>ajax클라이언트</li>\n</ul>\n<p>$.ajax(</p>\n<p>{</p>\n<p>url : '/test'</p>\n<p>data : {\"id\" : \"spring\" }</p>\n<p>type : 'get'</p>\n<p>dataType : 'json'</p>\n<p>success : function(server){</p>\n<p>​\t\t\tserver = \"{\\\"status\\\" : true}\"; //이미 저장되어 있음.</p>\n<p>​\t\t\t$(\"div\").html(server.status);</p>\n<p>​\t\t\tserver.status</p>\n<p>​\t\t}</p>\n<p>​\t}</p>\n<p>);</p>\n<ul>\n<li>ajax서버</li>\n</ul>\n<p>@Controller</p>\n<p>class A{</p>\n<p>@RequestMapping(\"/test\")</p>\n<p>@ResponseBody</p>\n<p>a(String id){</p>\n<p>//처리</p>\n<p>//결과 응답</p>\n<p>return \"{\\\"status\\\" : true}\";</p>\n<p>}</p>\n<p>}</p>","excerpt":"시작하기에 앞서 4일차 스프링 정리 Spring Post 사용시 한글 깨짐 해결 web.xml…","frontmatter":{"title":"Spring 정리 -03","date":"2020-02-06","tags":["Spring","java"],"keywords":["Happy Hwan"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/spring-post-03/","previous":{"fields":{"slug":"/spring-post-02/"},"frontmatter":{"title":"Spring 정리 -02","tags":["Spring","java"],"published":true}},"next":{"fields":{"slug":"/mybatis-post-01/"},"frontmatter":{"title":"Mybatis 정리 -01","tags":["Mybatis","spring"],"published":true}}}}}