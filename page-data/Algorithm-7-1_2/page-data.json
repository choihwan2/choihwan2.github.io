{"componentChunkName":"component---src-templates-post-tsx","path":"/Algorithm-7-1_2/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"문제\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C\" aria-label=\"문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제<a href=\"https://programmers.co.kr/learn/courses/30/lessons/64061\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#</a></h2>\n<ul>\n<li>링크로 대체</li>\n</ul>\n<h2 id=\"풀이-및-주저리\" style=\"position:relative;\"><a href=\"#%ED%92%80%EC%9D%B4-%EB%B0%8F-%EC%A3%BC%EC%A0%80%EB%A6%AC\" aria-label=\"풀이 및 주저리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>풀이 및 주저리..</h2>\n<p>조금 쉬운 문제를 찾다가 갑자기 재밌어 보여서 풀어본 문제이다. 카카오 2019 겨울 인턴쉽 문제 중 아마 가장 쉬운 문제가 아닐까 싶다. 인형배열 만큼 스택을 만들고 또 인형을 고를때도 스택을 이용해서 풀수도 있었겠지만 그렇게 풀지 않으려고 하다가 고생한 문제이다.. 근래에 알고리즘 문제를 많이 풀지 않다보니 감이 죽는 것 같기도하고.. 머리속으로 복잡한 계산이 쉽게 되지않았다. 마지막까지 골치 먹었던게.. 없어진 인형의 수.. 곱하기 2를 해주는 걸 발견하지 못해서 디버깅까지하고 시간을 낭비했다.. 문제를 다시 잘 읽는 연습은 끝이없는것 같다..<img class=\"emoji-icon\" alt=\"emoji-sob\" data-icon=\"emoji-sob\" style=\"display: inline; margin: 0; margin-top: 1px; position: relative; top: 5px; width: 25px\" src=\"data:image/png;base64, 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\" title=\"emoji-sob\"></p>\n<h2 id=\"코드\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%93%9C\" aria-label=\"코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드</h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> board<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> moves<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> answer <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> numArr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>board<span class=\"token punctuation\">.</span>length <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> board<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Stack</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> stockStk <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Stack</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span>numArr<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> numArr<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// stack이 비었는지?</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">:</span> moves<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>numArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">int</span> pick <span class=\"token operator\">=</span> board<span class=\"token punctuation\">[</span>numArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>stockStk<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> stockStk<span class=\"token punctuation\">.</span><span class=\"token function\">peek</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> pick<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    stockStk<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    answer<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                    stockStk<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>pick<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                numArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n\n        <span class=\"token keyword\">return</span> answer <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"기억에-남길-것\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EC%96%B5%EC%97%90-%EB%82%A8%EA%B8%B8-%EA%B2%83\" aria-label=\"기억에 남길 것 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기억에 남길 것!</h2>\n<ul>\n<li>문제를 다시 한번 꼼꼼하게 읽기..:thinking:</li>\n</ul>","excerpt":"문제# 링크로 대체 풀이 및 주저리.. 조금 쉬운 문제를 찾다가 갑자기 재밌어 보여서 풀어본 문제이다. 카카오 201…","tableOfContents":"<ul>\n<li><a href=\"/Algorithm-7-1_2/#%EB%AC%B8%EC%A0%9C\">문제#</a></li>\n<li><a href=\"/Algorithm-7-1_2/#%ED%92%80%EC%9D%B4-%EB%B0%8F-%EC%A3%BC%EC%A0%80%EB%A6%AC\">풀이 및 주저리..</a></li>\n<li><a href=\"/Algorithm-7-1_2/#%EC%BD%94%EB%93%9C\">코드</a></li>\n<li><a href=\"/Algorithm-7-1_2/#%EA%B8%B0%EC%96%B5%EC%97%90-%EB%82%A8%EA%B8%B8-%EA%B2%83\">기억에 남길 것!</a></li>\n</ul>","fields":{"slug":"/Algorithm-7-1_2/"},"frontmatter":{"title":"알고리즘 스터디 7월 1주차 문제2 (크레인 인형 뽑기)","date":"Jul 05, 2020","tags":["algorithm","stack"],"keywords":["study","codingtest"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/Algorithm-7-1_2/","series":[{"slug":"/Algorithm-7-1_1/","title":"알고리즘 스터디 7월 1주차 문제1 (단어 변환하기)","num":1},{"slug":"/Algorithm-7-1_2/","title":"알고리즘 스터디 7월 1주차 문제2 (크레인 인형 뽑기)","num":2},{"slug":"/Algorithm-7-1_3/","title":"알고리즘 스터디 7월 1주차 문제3 (네트워크)","num":3}],"lastmod":"0001-01-01"}},"staticQueryHashes":["3649515864","63159454"]}